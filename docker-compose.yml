###############################################################################
# Default Docker Compose configuration
###############################################################################
# This is the default docker-compose configuration for Lodestone.
# You can use it to have a working Lodestone setup out of the box
#

version: '2.2'
services:
  elasticsearch:
    build: elasticsearch

    #    image: analogj/lodestone:elasticsearch
    environment:
      #      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data

  processor:
    #    image: analogj/lodestone:processor
    build: processor
    depends_on:
      elasticsearch:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      storage:
        condition: service_healthy
      tika:
        condition: service_healthy
    environment:
      - LS_ELASTICSEARCH_HOST=${LS_ELASTICSEARCH_HOST:-elasticsearch}
      - LS_ELASTICSEARCH_PORT=${LS_ELASTICSEARCH_PORT:-9200}
      - LS_RABBITMQ_HOST=${LS_RABBITMQ_HOST:-rabbitmq}
      - LS_RABBITMQ_PORT=${LS_RABBITMQ_PORT:-5672}
      - LS_STORAGE_HOST=${LS_STORAGE_HOST:-storage}
      - LS_STORAGE_PORT=${LS_STORAGE_PORT:-9000}
      - LS_TIKA_HOST=${LS_TIKA_HOST:-tika}
      - LS_TIKA_PORT=${LS_TIKA_PORT:-9998}
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
      - RABBITMQ_USER=lodestone
      - RABBITMQ_PASS=lodestone

  webapp:
    #    image: analogj/lodestone:web
    build: web
    depends_on:
      elasticsearch:
        condition: service_healthy
      storage:
        condition: service_healthy
    ports:
      - 80:3000
    environment:
      - LS_STORAGE_HOST=${LS_STORAGE_HOST:-storage}
      - LS_STORAGE_PORT=${LS_STORAGE_PORT:-9000}
      - LS_STORAGE_PATH=${LS_STORAGE_PATH:-/storage/}
      - LS_ELASTICSEARCH_HOST=${LS_ELASTICSEARCH_HOST:-elasticsearch}
      - LS_ELASTICSEARCH_PORT=${LS_ELASTICSEARCH_PORT:-9200}
      - LS_RABBITMQ_HOST=${LS_RABBITMQ_HOST:-rabbitmq}
      - LS_RABBITMQ_PORT=${LS_RABBITMQ_PORT:-5672}
      - LS_RABBITMQ_MG_HOST=${LS_RABBITMQ_MG_HOST:-rabbitmq}
      - LS_RABBITMQ_MG_PORT=${LS_RABBITMQ_MG_PORT:-15672}
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
      - RABBITMQ_USER=lodestone
      - RABBITMQ_PASS=lodestone
      - DISABLE_FRONTEND=true


  storage:
    build: storage
    #    image: analogj/lodestone:storage
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./data/storage:/data
    environment:
      - LS_RABBITMQ_HOST=${LS_RABBITMQ_HOST:-rabbitmq}
      - LS_RABBITMQ_PORT=${LS_RABBITMQ_PORT:-5672}
      - RABBITMQ_USER=lodestone
      - RABBITMQ_PASS=lodestone
      - MINIO_BROWSER=off
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    #      - MINIO_WORM=on
    #      - MINIO_USERNAME=minio
    #      - MINIO_GROUPNAME=minio
    #      - MINIO_PUID=15000
    #      - MINIO_PGID=15000

  rabbitmq:
    build: rabbitmq
    #    image: analogj/lodestone:rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=lodestone
      - RABBITMQ_DEFAULT_PASS=lodestone

  tika:
    image: analogj/lodestone:tika

